{"version":3,"sources":["User.js","AlertForm.js","index.js"],"names":["baseRoleSelect","key","text","value","teamRoleSelect","teamSelect","UserForm","state","fullname","email","baseRole","countryCode","phonenumber","team","teamRole","jobTitle","handleChange","e","name","setState","handleSubmit","data","JSON","stringify","user","type","role","job_title","phone_contact_method","country_code","address","label","sms_contact_method","fetch","method","body","this","Form","onSubmit","Segment","Grid","columns","relaxed","Column","Field","control","Input","placeholder","onChange","required","Group","widths","width","Select","options","Divider","vertical","Button","Component","Page","children","Container","style","margin","Header","as","pkg","version","styleLink","document","createElement","rel","href","head","appendChild","ReactDOM","render","User","getElementById"],"mappings":"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","file":"static/js/main.49a82491.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport {\n  Button, Form, Input, Select, \n  Divider, Grid, Segment\n} from 'semantic-ui-react'\n\nconst baseRoleSelect = [\n  { key: 'observer', text: 'Observer', value: 'observer' },\n  { key: 'manager', text: 'Manager', value: 'user' },\n  { key: 'admin', text: 'Admin', value: 'admin' },\n]\n\nconst teamRoleSelect = [\n  { key: 'responder', text: 'Responder', value: 'responder' },\n  { key: 'manager', text: 'Manager', value: 'manager' }\n]\n\nconst teamSelect = [\n  { key: 'development', text: 'development', value: 'development' },\n  { key: 'networks', text: 'networks', value: 'networks' },\n  { key: 'amp', text: 'amp', value: 'amp' },\n  { key: 'pcf', text: 'pcf', value: 'pcf' }\n]\n\nclass UserForm extends Component {\n  state = { fullname: '',     email: '',    baseRole: '',\n            countryCode: '',  phonenumber: '', \n            team: '',         teamRole: '', jobTitle: '' }\n\n  handleChange = (e, { name, value }) => this.setState({ [name]: value })\n\n  handleSubmit = () => {\n    const { fullname, email, baseRole, countryCode, phonenumber, \n            team, teamRole, jobTitle } = this.state\n\n    const data = JSON.stringify({ \n      user:  { \t\n        type      : \"user\",\n        name      : fullname,\n        email     : email,\n        role      : baseRole,\n        job_title : jobTitle\n      },\n\n      phone_contact_method: {\n        type          : \"phone_contact_method\",\n        country_code  : countryCode,\n        address       : phonenumber,\n        label         : \"Work\"\n      },\n\n      sms_contact_method: {\n        type          : \"sms_contact_method\",\n        country_code  : countryCode,\n        address       : phonenumber,\n        label         : \"Work\"\n      },\n\n      team  : team,\n      role  : teamRole\n    });\n\n    /*\n    fetch('https://events.pagerduty.com/v2/enqueue', {\n      method: 'POST',\n      body: data,\n    });\n    */\n\n    fetch('https://webhook.site/a92bb3c3-9095-4f24-b92d-2c49cbbb6aca', {\n      method: 'POST',\n      body: data,\n    });\n\n    this.setState({ fullname: '',     email: '',    baseRole: '',\n                    countryCode: '',  phonenumber: '',  \n                    team: '',         teamRole: '', jobTitle: '',})\n}\n\n  render() {\n    const { fullname, email, baseRole, countryCode, phonenumber, \n            team, teamRole, jobTitle } = this.state\n\n    return (\n\n\n      <Form onSubmit={this.handleSubmit}>\n        <Segment>\n          <Grid columns={2} relaxed='very'>\n            <Grid.Column>\n              <Form.Field\n                control={Input}\n                name='fullname'\n                value={fullname}\n                label='Full Name'\n                placeholder='e.g. John Smith'\n                onChange={this.handleChange}\n                required\n              />\n              <Form.Field\n                control={Input}\n                name='email'\n                value={email}\n                label='Email Address'\n                placeholder='Enter Email Address'\n                onChange={this.handleChange}\n                required\n                //error={{\n                //  content: 'Please enter a valid email address',\n                //  pointing: 'above',\n                //}}\n              />\n              <Form.Group widths='equal'>\n                  <Form.Field\n                  control={Input}\n                  name='countryCode'\n                  value={countryCode}\n                  label='Code'\n                  placeholder='eg: 61'\n                  onChange={this.handleChange}\n                  width={6}\n                  required\n                />\n                <Form.Field\n                  control={Input}\n                  name='phonenumber'\n                  value={phonenumber}\n                  label='Phone Number'\n                  placeholder='e.g. 0400123456'\n                  onChange={this.handleChange}\n                  required\n                />\n              </Form.Group>\n              <Form.Field\n                  control={Input}\n                  name='jobTitle'\n                  value={jobTitle}\n                  label='Job Title'\n                  placeholder='optional'\n                  onChange={this.handleChange} \n                />\n            </Grid.Column>\n            <Grid.Column>\n              <Form.Field\n                control={Select}\n                name='baseRole'\n                value={baseRole}\n                label=\"User's Base Role\"\n                options={baseRoleSelect}\n                placeholder='Select User Role'\n                onChange={this.handleChange}\n                required\n              />\n              <Form.Field\n                control={Select}\n                name='team'\n                value={team}\n                label='Team'\n                options={teamSelect}\n                placeholder='Select Team'\n                onChange={this.handleChange}\n                required\n              />\n              <Form.Field\n                control={Select}\n                name='teamRole'\n                value={teamRole}\n                label=\"User's Team Role\"\n                options={teamRoleSelect}\n                placeholder='Select Team Role'\n                onChange={this.handleChange}\n                required\n              />\n            </Grid.Column>\n          </Grid>\n          <Divider vertical>and</Divider>\n        </Segment>\n\n          \n          \n        <Form.Field control={Button}>Create User</Form.Field>\n      </Form>\n    )\n  }\n\n}\n\nexport default UserForm;\n","import React, { Component } from 'react'\nimport './AlertForm.css';\nimport {\n  Button,\n  // Checkbox,\n  Form,\n  Input,\n  Radio,\n  Select,\n  TextArea,\n} from 'semantic-ui-react'\n\n\nconst options = [\n  { key: 'NSW', text: 'NSW', value: 'NSW' },\n  { key: 'VIC', text: 'VIC', value: 'VIC' },\n  { key: 'QLD', text: 'QLD', value: 'QLD' },\n]\n\nclass AlertForm extends Component {\n  state = { summary: '', description: '', region: '', priority: ''}\n\n  handleChange = (e, { name, value }) => this.setState({ [name]: value })\n\n  handleSubmit = () => {\n    const { summary, description, region, priority } = this.state\n\n    const data = JSON.stringify({ \n      payload : {\n        summary : summary,\n        source : \"Customer Incident Form\",\n        severity : \"error\",\n        custom_details : {\n          description : description,\n          region : region,\n          priority : priority\n        }\n      },\n      routing_key: \"ROUTING_KEY\",\n      event_action: \"trigger\"\n    });\n\n    /*\n    fetch('https://events.pagerduty.com/v2/enqueue', {\n      method: 'POST',\n      body: data,\n    });\n    */\n\n    fetch('https://webhook.site/a92bb3c3-9095-4f24-b92d-2c49cbbb6aca', {\n      method: 'POST',\n      body: data,\n    });\n\n    this.setState({ summary: '', description: '', region: '', priority: ''})\n\n}\n\n  render() {\n    const { summary, description, region, priority } = this.state\n\n    return (\n      <Form onSubmit={this.handleSubmit}>\n          <Form.Field\n            control={Input}\n            name='summary'\n            value={summary}\n            label='Incident Summary'\n            placeholder='Enter Incident Summary'\n            onChange={this.handleChange}\n            required\n            //error={{\n            //  content: 'Please enter a valid email address',\n            //  pointing: 'above',\n            //}}\n          />\n          <Form.Field\n            control={TextArea}\n            name='description'\n            value={description}\n            label='Incident Details'\n            placeholder='Enter Incident Details'\n            onChange={this.handleChange}\n            required\n            //error={{\n            //  content: 'Please enter a valid email address',\n            //  pointing: 'above',\n            //}}\n          />\n          <Form.Field\n            control={Select}\n            name='region'\n            value={region}\n            label='Affected Region'\n            options={options}\n            placeholder='Select Region'\n            onChange={this.handleChange}\n            required\n          />\n          <Form.Group inline>\n          <label>Priority</label>\n          <Form.Field\n            control={Radio}\n            name='priority'\n            label='P1'\n            value='1'\n            checked={priority === '1'}\n            onChange={this.handleChange}\n          />\n          <Form.Field\n            control={Radio}\n            label='P2'\n            name='priority'\n            value='2'\n            checked={priority === '2'}\n            onChange={this.handleChange}\n          />\n          <Form.Field\n            control={Radio}\n            label='P3'\n            name='priority'\n            value='3'\n            checked={priority === '3'}\n            onChange={this.handleChange}\n          />\n        </Form.Group>\n        <Form.Field control={Button}>Submit Alert</Form.Field>\n      </Form>\n    )\n  }\n\n}\n\nexport default AlertForm;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Container, Header } from \"semantic-ui-react\";\n\nimport pkg from 'semantic-ui-react/package.json'\nimport User from \"./User\";\nimport AlertForm from \"./AlertForm\";\n\nconst Page = ({ children }) => (\n  <Container text style={{ margin: 40 }}>\n    <Header as=\"h3\">This example is powered by Semantic UI React {pkg.version} </Header>\n    {children}\n  </Container>\n);\n\n// TODO: Switch to https://github.com/palmerhq/the-platform#stylesheet when it will be stable\nconst styleLink = document.createElement(\"link\");\nstyleLink.rel = \"stylesheet\";\nstyleLink.href = \"https://cdn.jsdelivr.net/npm/semantic-ui/dist/semantic.min.css\";\ndocument.head.appendChild(styleLink);\n\nReactDOM.render(\n  <Page>\n    <User />\n  </Page>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}